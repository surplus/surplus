name: Publish to NPM
description: Publishes a Surplus package to NPM
inputs:
  package:
    description: 'The package name (also the working directory, which must match @surplus/<name>)'
    required: true
  npm-token:
    description: 'The NPM token to use for publishing'
    required: true
  github-token:
    description: 'The GitHub token to use for waiting for CI'
    required: true
  ref:
    description: '${GITHUB_REF}'
    required: true

runs:
  using: composite
  steps:
    - run: sudo apt install -y jq
      shell: bash
    - run: |
        echo GITHUB_REF=${GITHUB_REF}
        echo VERSION=${GITHUB_REF#refs/tags/${{ inputs.package }}/}
      shell: bash
      env:
        GITHUB_REF: ${{ inputs.ref }}
    - name: Ensure that tag is a valid semver version string
      run: |
        if ! npx -y semver "${GITHUB_REF#refs/tags/${{ inputs.package }}/}" ; then
          echo "Tag is not a valid semver version string"
          exit 1
        fi
      env:
        GITHUB_REF: ${{ inputs.ref }}
      shell: bash
    - name: Check that specified package name matches package.json name
      run: |
        if [ "$(jq -r '.name' package.json)" != "@surplus/${{ inputs.package }}" ]; then
          echo "Specified package name does not match package.json name"
          exit 1
        fi
      shell: bash
      working-directory: ${{ inputs.package }}
    - name: Check package.json version against tag
      run: |
        if [ "$(jq -r '.version' package.json)" != "${GITHUB_REF#refs/tags/${{ inputs.package }}/}" ]; then
          echo "Tag version does not match package.json version"
          exit 1
        fi
      shell: bash
      working-directory: ${{ inputs.package }}
      env:
        GITHUB_REF: ${{ inputs.ref }}
    - name: Make sure tag is newer than latest version published on npm
      run: |
        if ! npx -y semver --range ">(npm view '@surplus/${{ inputs.package }}' version)" "${GITHUB_REF#refs/tags/${{ inputs.package }}/}" ; then
          echo "Tag version is not newer than latest version published on npm; manual publish required"
          exit 1
        fi
      shell: bash
      working-directory: ${{ inputs.package }}
      env:
        GITHUB_REF: ${{ inputs.ref }}
    - run: npm i
      shell: bash
    - run: npm run build
      working-directory: ${{ inputs.package }}
      shell: bash
    - run: npm publish --access public
      working-directory: ${{ inputs.package }}
      env:
        NODE_AUTH_TOKEN: ${{ inputs.npm-token }}
      shell: bash
